#include <cstdio>

void printArray(int arr[], int size)
{
    for (int i = 0; i < size; i++)
    {
        printf("%d ", arr[i]);
    }

    printf("\n");
}

void swap(int* a, int* b){
	int temp = *a;
	*a = *b;
	*b = temp;
}

void quicksort(int arr[], int l, int r){
	// No need to sort an array with length < 1
	if(l >= r-1){
		return;
	}

	int pivot = arr[r-1];
	int index = l;

	for(int i=l; i<r; i++){
		if(arr[i] <= pivot){
			swap(&arr[i], &arr[index]);
			index++;
		}
	}

	quicksort(arr, l, index-1);
	quicksort(arr, index, r);
}

int main(){
	int arr[] = {10, 7, 8, 9, 1, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 99, 43, 129, 320, 1, 1, 0, -5, 44, 211, 5};
   	int n = sizeof(arr) / sizeof(arr[0]);
//	printArray(arr, n);
   	quicksort(arr, 0, n);
	printf("Sorted array: \n");
	printArray(arr, n);

	return 0;
}
